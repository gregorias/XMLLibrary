import groovy.swing.SwingBuilder

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'pmd'

def DEPENDENCY_LIB_DIRECTORY = 'lib/'

group = 'me.gregorias'
version = '0.0.1'

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'com.google.inject', name: 'guice', version: '4.0-beta5'
  compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
  compile group: 'commons-io', name: 'commons-io', version: '2.4'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
  testCompile group: 'junit', name: 'junit', version: '4.11'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.8'
}

compileJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

compileTestJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

println sourceSets.main.java.srcDirs

javadoc {
  exclude "**/jaxb/*.java"
}

jacoco {
  toolVersion = '0.7.2.201409121644'
}

jacocoTestReport {
  dependsOn test
  reports {
    html.enabled true
  }
}

task jarJavadoc(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task jarSource(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jarSource
  archives jarJavadoc
}

task copyRuntimeDependencies(type: Copy) {
  from configurations.runtime
  into DEPENDENCY_LIB_DIRECTORY
}

findbugs {
  effort = "max"
  reportLevel = "low"
  toolVersion = "3.0.0"
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

/* Generate gradlew and gradle wrappers for portable gradle use */
task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}
